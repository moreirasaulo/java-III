/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practice9.remaketodoquiz;

import java.awt.FileDialog;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Acer
 */
public class Practice9RemakeTodoQuiz extends javax.swing.JFrame {
    String filename;
    
    DefaultListModel<String> modelTasksList = new DefaultListModel<>();

    /**
     * Creates new form Practice9RemakeTodoQuiz
     */
    public Practice9RemakeTodoQuiz() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstOutput = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        tfTask = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        sliderDifficulty = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        ftDueDate = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        comboStatus = new javax.swing.JComboBox<>();
        btAdd = new javax.swing.JButton();
        btUpdate = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();
        btExportAll = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tasks Organizer");

        lstOutput.setModel(modelTasksList);
        lstOutput.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstOutputValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstOutput);

        jLabel1.setText("Task:");

        jLabel2.setText("Difficulty:");

        sliderDifficulty.setMajorTickSpacing(1);
        sliderDifficulty.setMaximum(5);
        sliderDifficulty.setMinimum(1);
        sliderDifficulty.setPaintLabels(true);
        sliderDifficulty.setPaintTicks(true);
        sliderDifficulty.setSnapToTicks(true);
        sliderDifficulty.setValue(1);

        jLabel3.setText("Due date:");

        ftDueDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd-MM-yyyy"))));
        ftDueDate.setText("dd-MM-yyyy");

        jLabel4.setText("Status:");

        comboStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pending", "Delegated", "Closed", "Done" }));

        btAdd.setText("Add");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        btUpdate.setText("Update");
        btUpdate.setEnabled(false);
        btUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUpdateActionPerformed(evt);
            }
        });

        btDelete.setForeground(new java.awt.Color(255, 0, 0));
        btDelete.setText("Delete");
        btDelete.setEnabled(false);
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteActionPerformed(evt);
            }
        });

        btExportAll.setText("Export all to file...");
        btExportAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExportAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btExportAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfTask, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sliderDifficulty, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(ftDueDate))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(btExportAll))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(tfTask, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(sliderDifficulty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel2)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ftDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(comboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btDelete)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        // Task        
        String task1 = tfTask.getText();
        if(!task1.matches("^[a-zA-Z0-9- -áàéèüóãõ]{1,100}$"))
        {
            JOptionPane.showMessageDialog(this, "Please enter only alphanumeric values, up to 100 characters.", "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Difficulty
        int difficulty = sliderDifficulty.getValue();
        String diffStr = difficulty + "";
        
        // Date
        Date dueDate = null;
        SimpleDateFormat correctFormat = new SimpleDateFormat("dd-MM-yyyy");
        try
        {
            dueDate = correctFormat.parse(ftDueDate.getText());
        }
        catch(ParseException ex)
        {
            JOptionPane.showMessageDialog(this, "The date format should be: dd-MM-yyyy. Please review.", "Error", 
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Status
        String status = comboStatus.getSelectedItem().toString();
        
        // Create info and add element to the model
        String info = String.format("%s by %tF (Difficulty %s), %s", task1, dueDate, diffStr, status);
        modelTasksList.addElement(info);
    }//GEN-LAST:event_btAddActionPerformed

    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteActionPerformed
        /* FOR SINGLE SELECTION:
        if(modelTasksList.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "The list is empty. There's nothing to remove.", "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        else if(lstOutput.getSelectedIndex() == -1)
        {
            JOptionPane.showMessageDialog(this, "Please select a task to remove first.", "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }        
        modelTasksList.removeElementAt(lstOutput.getSelectedIndex());
        */
        
        int[] selectedIndicesArray = lstOutput.getSelectedIndices();
        if(selectedIndicesArray.length == 0)
        {
            JOptionPane.showMessageDialog(this, "Select tasks to remove first.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // delete in reverse order
        for(int i = selectedIndicesArray.length - 1; i >= 0; i--)
        {
            int index = selectedIndicesArray[i];
            modelTasksList.remove(index);
        }       
    }//GEN-LAST:event_btDeleteActionPerformed

    private void btUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUpdateActionPerformed
        // Task        
        String task1 = tfTask.getText();
        if(!task1.matches("^[a-zA-Z0-9- -áàéèüóãõ]{1,100}$"))
        {
            JOptionPane.showMessageDialog(this, "Please enter only alphanumeric values, up to 100 characters.", "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Difficulty
        int difficulty = sliderDifficulty.getValue();
        String diffStr = difficulty + "";
        
        // Date
        Date dueDate = null;
        SimpleDateFormat correctFormat = new SimpleDateFormat("dd-MM-yyyy");
        try
        {
            dueDate = correctFormat.parse(ftDueDate.getText());
        }
        catch(ParseException ex)
        {
            JOptionPane.showMessageDialog(this, "The date format should be: dd-MM-yyyy. Please review.", "Error", 
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Status
        String status = comboStatus.getSelectedItem().toString();
        
        // Create info and update element at the model
        String info = String.format("%s by %tF (Difficulty %s), %s", task1, dueDate, diffStr, status);       
        modelTasksList.setElementAt(info, lstOutput.getSelectedIndex());
    }//GEN-LAST:event_btUpdateActionPerformed

    private void lstOutputValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstOutputValueChanged
        btDelete.setEnabled(true);
        btUpdate.setEnabled(true);
        
        if(modelTasksList.isEmpty())
        {
            btDelete.setEnabled(false);
            btUpdate.setEnabled(false);
        }
        
        if(lstOutput.getSelectedIndex() == -1)
        {
            btDelete.setEnabled(false);
            btUpdate.setEnabled(false);
        }
    }//GEN-LAST:event_lstOutputValueChanged

    private void btExportAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExportAllActionPerformed
        if(modelTasksList.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "The list is empty. There's nothing to export.", "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        FileDialog fileDialog = new FileDialog(Practice9RemakeTodoQuiz.this, "Save File", FileDialog.SAVE);
        fileDialog.setVisible(true);
        
        if(fileDialog.getFile() != null)
        {
            filename = fileDialog.getDirectory() + fileDialog.getFile();
            setTitle(filename);
        }
        
            try(PrintWriter printWriter = new PrintWriter(new FileWriter (new File(filename), true)))
            {
            for(int i =0; i < modelTasksList.size(); i++)
            {
               printWriter.println(modelTasksList.elementAt(i));
            }
            
            setTitle(filename);
            
        }
        catch(IOException e)
        {
            System.out.println("File Not Found");
        }
    }//GEN-LAST:event_btExportAllActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Practice9RemakeTodoQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Practice9RemakeTodoQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Practice9RemakeTodoQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Practice9RemakeTodoQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Practice9RemakeTodoQuiz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btExportAll;
    private javax.swing.JButton btUpdate;
    private javax.swing.JComboBox<String> comboStatus;
    private javax.swing.JFormattedTextField ftDueDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lstOutput;
    private javax.swing.JSlider sliderDifficulty;
    private javax.swing.JTextField tfTask;
    // End of variables declaration//GEN-END:variables
}
