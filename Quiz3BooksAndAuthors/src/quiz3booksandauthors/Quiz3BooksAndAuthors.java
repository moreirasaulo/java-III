/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quiz3booksandauthors;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.sql.*;
import java.sql.Blob;
import javax.sql.rowset.serial.SerialBlob;
import java.text.ParseException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Acer
 */
public class Quiz3BooksAndAuthors extends javax.swing.JFrame 
{
    DefaultListModel<String> modelAuthorsList = new DefaultListModel<>();
    DefaultListModel<String> modelBooksList = new DefaultListModel<>();
    
    Database db;
    
    Blob inputPhoto;
    BufferedImage currentImage;

    /**
     * Creates new form Quiz3BooksAndAuthors
     */
    public Quiz3BooksAndAuthors() 
    {
        initComponents();
        
        try 
        {
            db = new Database();

        } 
        catch (SQLException ex) 
        {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to connect: " + ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);
            System.exit(1);
        }
        loadBooksFromDatabase();
    }
    
    private void loadBooksFromDatabase() 
    {
        try 
        {
            ArrayList<String> bookList = db.getAllBooks();
            modelBooksList.clear();
            modelBooksList.addAll(bookList);            
        } 
        catch (SQLException ex) 
        {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to connect: " 
                    + ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dlgAuth = new javax.swing.JDialog();
        jLabel5 = new javax.swing.JLabel();
        dlgAuth_tfName = new javax.swing.JTextField();
        dlgAuth_btAdd = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        dlgAuth_btSaveToBook = new javax.swing.JButton();
        fileChooser = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstBooks = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        tfTitle = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfISBN = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfPubDate = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        lblCover = new javax.swing.JLabel();
        btChooseAuthors = new javax.swing.JButton();
        btAddBook = new javax.swing.JButton();
        lblAuthor = new javax.swing.JLabel();

        dlgAuth.setModal(true);
        dlgAuth.setResizable(false);

        jLabel5.setText("Name:");

        dlgAuth_btAdd.setText("Add");
        dlgAuth_btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dlgAuth_btAddActionPerformed(evt);
            }
        });

        jList1.setModel(modelAuthorsList);
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jList1);

        dlgAuth_btSaveToBook.setText("Save selected to Book");
        dlgAuth_btSaveToBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dlgAuth_btSaveToBookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dlgAuthLayout = new javax.swing.GroupLayout(dlgAuth.getContentPane());
        dlgAuth.getContentPane().setLayout(dlgAuthLayout);
        dlgAuthLayout.setHorizontalGroup(
            dlgAuthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgAuthLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dlgAuthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2)
                    .addGroup(dlgAuthLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dlgAuth_tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dlgAuth_btAdd))
                    .addComponent(dlgAuth_btSaveToBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dlgAuthLayout.setVerticalGroup(
            dlgAuthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgAuthLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dlgAuthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(dlgAuth_tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dlgAuth_btAdd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dlgAuth_btSaveToBook)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        lstBooks.setModel(modelBooksList);
        lstBooks.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(lstBooks);

        jLabel1.setText("Title:");

        jLabel2.setText("ISBN:");

        jLabel3.setText("Pub Date:");

        jLabel4.setText("Cover:");

        lblCover.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCover.setText("Click to select");
        lblCover.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblCover.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCoverMouseClicked(evt);
            }
        });

        btChooseAuthors.setText("Choose authors");
        btChooseAuthors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btChooseAuthorsActionPerformed(evt);
            }
        });

        btAddBook.setText("Add book");
        btAddBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddBookActionPerformed(evt);
            }
        });

        lblAuthor.setText("Author's Name");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfTitle)
                            .addComponent(tfISBN)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btChooseAuthors, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btAddBook, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfPubDate))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblAuthor, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                            .addComponent(lblCover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(tfTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tfISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tfPubDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(lblCover, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblAuthor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btChooseAuthors)
                            .addComponent(btAddBook)))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btAddBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddBookActionPerformed
        try
        {
            String title = tfTitle.getText();
            String isbn = tfISBN.getText();
            
            if(db.getAllIsbns().contains(isbn))
            {
               JOptionPane.showMessageDialog(this, "Isbn cant be repeated "
                       , "Input error", JOptionPane.ERROR_MESSAGE);
            }
            Date pubDate = Book.dateFormat.parse(tfPubDate.getText());
            ArrayList<String> authors = new ArrayList<String>();
            
            for(int i =0; i <modelAuthorsList.size(); i++)
            {
                authors.add(modelAuthorsList.getElementAt(i));
            }
            Book book = new Book(0, title, isbn, pubDate, inputPhoto, authors);
             int newId =  db.addBook(book);
             
             for (int i = 0; i < authors.size(); i++) {
                int bookId = newId;
                String name = authors.get(i);
                Author author = new Author(0, bookId, name);
                db.addAuthor(author);
            }
           
          
            loadBooksFromDatabase();
        }
        catch (ParseException | InvalidDataException ex) 
        {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to add book: " + ex.getMessage(), "Internal error", JOptionPane.ERROR_MESSAGE);
        } 
        catch (SQLException ex) 
        {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to connect: " + ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);
        }        
    }//GEN-LAST:event_btAddBookActionPerformed

    private void lblCoverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCoverMouseClicked
        fileChooser.setFileFilter(new FileNameExtensionFilter("Image files", "jpg", "jpeg", "png", "gif"));
        fileChooser.setDialogTitle("Choose an image");        
        try 
        {            
            if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) 
            {
                File chosenImage = fileChooser.getSelectedFile();
                currentImage = ImageIO.read(chosenImage);
                Image scaledImg = currentImage.getScaledInstance(lblCover.getWidth(), lblCover.getHeight(), Image.SCALE_SMOOTH);
                lblCover.setIcon(new ImageIcon(scaledImg));
                lblCover.setText("");
                inputPhoto = new SerialBlob(Files.readAllBytes(chosenImage.toPath()));
            }
        }
        catch (SQLException | IOException ex) 
        {
            JOptionPane.showMessageDialog(this, "Error opening image file: " + ex.getMessage(),
                    "File error", JOptionPane.ERROR_MESSAGE);
        } 
    }//GEN-LAST:event_lblCoverMouseClicked

    private void dlgAuth_btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dlgAuth_btAddActionPerformed
        String name = dlgAuth_tfName.getText();
        
        if(name.equals(""))
        {
            JOptionPane.showMessageDialog(this, "The name field must be filled.",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }        
        modelAuthorsList.addElement(name);    
    }//GEN-LAST:event_dlgAuth_btAddActionPerformed

    private void btChooseAuthorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btChooseAuthorsActionPerformed
        dlgAuth_tfName.setText("");
        modelAuthorsList.clear();
        dlgAuth.pack();
        dlgAuth.setLocationRelativeTo(this);
        dlgAuth.setVisible(true);
    }//GEN-LAST:event_btChooseAuthorsActionPerformed

    private void dlgAuth_btSaveToBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dlgAuth_btSaveToBookActionPerformed
        ArrayList<String> authorsList = new ArrayList<String>();
        
        for(int i =0; i <modelAuthorsList.size(); i++)
           {
               authorsList.add(modelAuthorsList.getElementAt(i));
           }
        lblAuthor.setText(authorsList.toString());
        dlgAuth.setVisible(false);
    }//GEN-LAST:event_dlgAuth_btSaveToBookActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Quiz3BooksAndAuthors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Quiz3BooksAndAuthors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Quiz3BooksAndAuthors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Quiz3BooksAndAuthors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Quiz3BooksAndAuthors().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAddBook;
    private javax.swing.JButton btChooseAuthors;
    private javax.swing.JDialog dlgAuth;
    private javax.swing.JButton dlgAuth_btAdd;
    private javax.swing.JButton dlgAuth_btSaveToBook;
    private javax.swing.JTextField dlgAuth_tfName;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAuthor;
    private javax.swing.JLabel lblCover;
    private javax.swing.JList<String> lstBooks;
    private javax.swing.JTextField tfISBN;
    private javax.swing.JTextField tfPubDate;
    private javax.swing.JTextField tfTitle;
    // End of variables declaration//GEN-END:variables
}
