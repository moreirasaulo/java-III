/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package day02validatorregex;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Acer
 */
public class Day02ValidatorRegEx extends javax.swing.JFrame {

    /**
     * Creates new form Day02ValidatorRegEx
     */
    public Day02ValidatorRegEx() {
        initComponents();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tfFullName = new javax.swing.JTextField();
        tfPassportNumber = new javax.swing.JTextField();
        comboContinent = new javax.swing.JComboBox<>();
        rbGenderMale = new javax.swing.JRadioButton();
        rbGenderFemale = new javax.swing.JRadioButton();
        rbGenderAlien = new javax.swing.JRadioButton();
        cbPetsFish = new javax.swing.JCheckBox();
        cbPetsPig = new javax.swing.JCheckBox();
        cbPetsGoat = new javax.swing.JCheckBox();
        sliderHeight = new javax.swing.JSlider();
        tfDateOfBirth = new javax.swing.JTextField();
        btVerify = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        taResult = new javax.swing.JTextArea();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Full name:");

        jLabel2.setText("Passport number:");

        jLabel3.setText("Continent:");

        jLabel4.setText("Gender:");

        jLabel5.setText("Pets:");

        jLabel6.setText("Height (in cm):");

        jLabel7.setText("Date of birth:");

        comboContinent.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please choose...", "America", "Europe", "Africa", "Asia", "Oceania" }));

        buttonGroup1.add(rbGenderMale);
        rbGenderMale.setSelected(true);
        rbGenderMale.setText("Male");

        buttonGroup1.add(rbGenderFemale);
        rbGenderFemale.setText("Female");

        buttonGroup1.add(rbGenderAlien);
        rbGenderAlien.setText("Other");

        cbPetsFish.setText("Fish");

        cbPetsPig.setText("Pig");

        cbPetsGoat.setText("Goat");

        sliderHeight.setMajorTickSpacing(25);
        sliderHeight.setMaximum(225);
        sliderHeight.setMinimum(125);
        sliderHeight.setMinorTickSpacing(1);
        sliderHeight.setPaintLabels(true);
        sliderHeight.setPaintTicks(true);
        sliderHeight.setSnapToTicks(true);
        sliderHeight.setToolTipText("");

        tfDateOfBirth.setText("yyyy-MM-dd");

        btVerify.setText("Verify and add below");
        btVerify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVerifyActionPerformed(evt);
            }
        });

        taResult.setColumns(20);
        taResult.setRows(5);
        jScrollPane2.setViewportView(taResult);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(tfPassportNumber)
                                                .addComponent(comboContinent, 0, 176, Short.MAX_VALUE)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(rbGenderMale)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(rbGenderFemale)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(rbGenderAlien))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(cbPetsFish)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(cbPetsPig)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(cbPetsGoat)))
                                            .addComponent(tfDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 146, Short.MAX_VALUE))
                                    .addComponent(sliderHeight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(40, 40, 40)
                                .addComponent(tfFullName))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(btVerify)
                        .addGap(0, 142, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfFullName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfPassportNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboContinent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(rbGenderMale)
                    .addComponent(rbGenderFemale)
                    .addComponent(rbGenderAlien))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbPetsFish)
                    .addComponent(cbPetsPig)
                    .addComponent(cbPetsGoat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sliderHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btVerify)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private boolean ValidateName(String name) // method to validate the full name input
    {   
        // creation of a RegEx to verify if the input is valid
        final String NAME_PATTERN = "^[a-zA-Z- ]{1,50}$"; 
        // ^: beginning of expr.; a-z, A-Z, - and " " are valid; from 1 to 50 characters; $: end of expr.
        
        // returning the input field (tfFullName) and checking if it matches with the pattern
        return name.matches(NAME_PATTERN);
    }
    
    private boolean ValidatePassport() // method to validate the passport input
    {
        final String PASSPORT_PATTERN = "^[A-Z]{2}[0-9]{6}$";
        return tfPassportNumber.getText().matches(PASSPORT_PATTERN);
    }
    
    private boolean ValidateContinent()
    {
        // the combo is an array, and the first element (please choose) is zero.
        return comboContinent.getSelectedIndex() != 0; // if this happens, it's true.
    }
    
    private String ValidateDate()
    {
        try
        {
            SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
            Date date = format.parse(tfDateOfBirth.getText());
            if(!date.after(format.parse("1900-01-01")) || !date.before(format.parse("2101-01-01")))
            return "Year must be between 1900 and 2100";
        }
        catch(ParseException ex)
        {
            return "Wrong Date: " + ex.getMessage();
        }
        return null; 
    }
    
    private void printResults()
    {
        // tfFullName.getText()
        // tfPassportNumber.getText()
        // comboContinent.getSelectedItem()
        
        String gender = "";
        if(rbGenderMale.isSelected())
        {
            gender = "Male";
        }
        else if(rbGenderFemale.isSelected())
        {
            gender = "Female";
        }
        else if(rbGenderAlien.isSelected())
        {
            gender = "Other";
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Please select a gender", "Missing information",
                    JOptionPane.INFORMATION_MESSAGE);
        }
        
        // check boxes (pets)
           ArrayList<String> petsList = new ArrayList<>();
    
            if(cbPetsFish.isSelected())
            {
                petsList.add("fish");   //add "fish" to petsList ArrayList
            }
            //if again because check boxes are independent
            if(cbPetsPig.isSelected())
            {
                petsList.add("pig");   //add "pig" to petsList ArrayList
            }
            if(cbPetsGoat.isSelected())
            {
                petsList.add("goat");  //add "goat" to petsList ArrayList 
            }
            //after that we receive ArrayList with 0,1,2 or 3 strings

            //join() takes an array of items and a specified by us separator and returns a String with array items separated by this separator
            String pets = String.join(", ",petsList);
        
        // sliderHeight.getValue();
        
        //create String data to display in text area
        String data = String.format("Name: %s%nPassport number: %s%nContinent: %s%n"
                + "Gender: %s%nPets: %s%nHeight: %d%nDate of birth: %s", 
                tfFullName.getText(), tfPassportNumber.getText(), comboContinent.getSelectedItem(), gender, pets, 
                sliderHeight.getValue(), tfDateOfBirth.getText());
        taResult.setText(data);
    }
    
    private void btVerifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVerifyActionPerformed
        if(ValidateName(tfFullName.getText()) && ValidatePassport() && ValidateContinent() && ValidateDate() == null)
        {
            printResults();
        }
        else if(!ValidateName(tfFullName.getText()))
        {
            JOptionPane.showMessageDialog(this, "The name does not meet requirements.", "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
        else if(!ValidatePassport())
        {
            JOptionPane.showMessageDialog(this, "The passport format is not valid.", "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
        else if(!ValidateContinent())
        {
            JOptionPane.showMessageDialog(this, "A continent must be chosen.", "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
        else if(ValidateDate() != null)
        {
            JOptionPane.showMessageDialog(this, "Wrong date format.", "Error",
                    JOptionPane.ERROR_MESSAGE);
        }    
    }//GEN-LAST:event_btVerifyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Day02ValidatorRegEx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Day02ValidatorRegEx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Day02ValidatorRegEx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Day02ValidatorRegEx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Day02ValidatorRegEx().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btVerify;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox cbPetsFish;
    private javax.swing.JCheckBox cbPetsGoat;
    private javax.swing.JCheckBox cbPetsPig;
    private javax.swing.JComboBox<String> comboContinent;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JRadioButton rbGenderAlien;
    private javax.swing.JRadioButton rbGenderFemale;
    private javax.swing.JRadioButton rbGenderMale;
    private javax.swing.JSlider sliderHeight;
    private javax.swing.JTextArea taResult;
    private javax.swing.JTextField tfDateOfBirth;
    private javax.swing.JTextField tfFullName;
    private javax.swing.JTextField tfPassportNumber;
    // End of variables declaration//GEN-END:variables
}
