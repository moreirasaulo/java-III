/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practice6;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Acer
 */
public class Practice6 extends javax.swing.JFrame {
    
    DefaultListModel<Integer> modelNumbersList = new DefaultListModel<>();

    /**
     * Creates new form Practice6
     */
    public Practice6() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfInput = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstOutput = new javax.swing.JList<>();
        btExit = new javax.swing.JButton();
        btDeleteSelection = new javax.swing.JButton();
        btSave = new javax.swing.JButton();
        btUpdate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Killing Time");

        jLabel1.setText("Enter a number from ");

        jLabel2.setText("1 to 100");

        btAdd.setText("Add >>");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        lstOutput.setModel(modelNumbersList);
        lstOutput.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstOutput.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstOutputValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstOutput);

        btExit.setText("Exit");
        btExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExitActionPerformed(evt);
            }
        });

        btDeleteSelection.setText("Delete selection");
        btDeleteSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteSelectionActionPerformed(evt);
            }
        });

        btSave.setText("Save");
        btSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveActionPerformed(evt);
            }
        });

        btUpdate.setText("Update");
        btUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfInput)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btAdd)
                        .addComponent(btDeleteSelection)
                        .addComponent(btSave))
                    .addComponent(btExit, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btUpdate))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addGap(4, 4, 4)
                                .addComponent(tfInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btAdd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btSave)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btDeleteSelection))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btUpdate)
                    .addComponent(btExit))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed

        String str = tfInput.getText();
        if(!str.matches("^[0-9]{1,3}$"))
        {
            JOptionPane.showMessageDialog(this, "You should input an integer up to 3 digits.", "Error", 
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
                
        int num = Integer.parseInt(tfInput.getText());
        
        if(modelNumbersList.contains(num))
        {
            JOptionPane.showMessageDialog(this, "This number was already added before.", "Error", 
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if(num < 0 || num > 100)
        {
            JOptionPane.showMessageDialog(this, "Only numbers between 0 and 100 (inclusive) are allowed.", "Try again?", 
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        modelNumbersList.addElement(num);
        
        tfInput.setText("");
        
        
    }//GEN-LAST:event_btAddActionPerformed

    private void btExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExitActionPerformed
        dispose();
    }//GEN-LAST:event_btExitActionPerformed

    private void btDeleteSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteSelectionActionPerformed
        int index = lstOutput.getSelectedIndex();
        if(index == -1)
        {
            JOptionPane.showMessageDialog(this, "Select a number to delete first.", "Error", 
                    JOptionPane.ERROR_MESSAGE);
        }
        
        if(index != -1)
        {
            int dialogAnswer = JOptionPane.showConfirmDialog(null, "Would you like to confirm this number to be deleted?",
                    "Confirmation needed", JOptionPane.YES_NO_OPTION);
            
            if(dialogAnswer == JOptionPane.YES_OPTION)
            {
                modelNumbersList.remove(index);
            }
        }                        
    }//GEN-LAST:event_btDeleteSelectionActionPerformed

    private void btSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveActionPerformed
        if(modelNumbersList.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Your list of numbers is empty.", "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // the statement HAS to be in the first line, between parentheses, to work properly.
        try(PrintWriter printWriter = new PrintWriter(new FileWriter (new File("numbers.txt"), true)))
        {        
        for(int i=0; i < modelNumbersList.size(); i++)
        {
            printWriter.println(modelNumbersList.getElementAt(i));
        }
        JOptionPane.showMessageDialog(this, "Saved as 'numbers.txt'", "Success",
                    JOptionPane.INFORMATION_MESSAGE);        
       }
       catch(IOException ex)
       {
           JOptionPane.showMessageDialog(this, "Error writing to file", "Thanks",
                    JOptionPane.INFORMATION_MESSAGE);
       }
        
        /* PrintWriter will output the information. FileWriter to suggest it's gonna be to file. "True" means
            to append.
            Ex.:
            File numbers = new File("numbers.txt"); -> created object of type File
            FileWriter fileWriter = new FileWriter(numbers, true); -> receives info from PrintWriter
            PrintWriter print = new PrintWriter(fileWriter); -> PrintWriter is outputing device, reads 
            from java and outputs to where we suggest to do it. In this case, to FileWriter.
            */
    }//GEN-LAST:event_btSaveActionPerformed

    private void lstOutputValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstOutputValueChanged
        tfInput.setText(lstOutput.getSelectedValue()+"");
    }//GEN-LAST:event_lstOutputValueChanged

    private void btUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUpdateActionPerformed
         modelNumbersList.setElementAt(Integer.parseInt(tfInput.getText()), lstOutput.getSelectedIndex());
    }//GEN-LAST:event_btUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Practice6.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Practice6.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Practice6.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Practice6.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Practice6().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btDeleteSelection;
    private javax.swing.JButton btExit;
    private javax.swing.JButton btSave;
    private javax.swing.JButton btUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<Integer> lstOutput;
    private javax.swing.JTextField tfInput;
    // End of variables declaration//GEN-END:variables
}
