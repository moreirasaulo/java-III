/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package day02scoopselectorv2;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Acer
 */
public class Day02ScoopSelectorV2 extends javax.swing.JFrame {

    DefaultListModel<String> modelSelectedList = new DefaultListModel<>();
    DefaultListModel<String> modelAvailableList = new DefaultListModel<>();
    /**
     * Creates new form Day02ScoopSelectorV2
     */
    public Day02ScoopSelectorV2() {
        initComponents();
        
        // loading info from a file
        try(Scanner fileInput = new Scanner(new File("available.txt")))       //try to read from file
        {
            //while there is next line, keep loading
            while(fileInput.hasNextLine())
            {
                String flavour = fileInput.nextLine();
                modelAvailableList.addElement(flavour);    //add loaded elements to model of left list
            }
        }
        catch (IOException ex)
        {
            //if file is not found or any problem, display error message
            JOptionPane.showMessageDialog(this,"Unable to read from file: \n" + ex.getMessage(),"fatal error - file access error: ",
                       JOptionPane.ERROR_MESSAGE);
            //since file is not found and it is a fatal error then close program
            System.exit(1);   //1 if there was a problem and 0 if there was none
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btAdd = new javax.swing.JButton();
        btDeleteScoop = new javax.swing.JButton();
        btClearAll = new javax.swing.JButton();
        lblFlavours = new javax.swing.JLabel();
        lblSelected = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        liSelected = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        liFlavours = new javax.swing.JList<>();
        btSaveAndPlaceOrder = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Scoop Selector");

        btAdd.setText("Add >>");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        btDeleteScoop.setText("Delete Scoop");
        btDeleteScoop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteScoopActionPerformed(evt);
            }
        });

        btClearAll.setText("Clear All");
        btClearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btClearAllActionPerformed(evt);
            }
        });

        lblFlavours.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        lblFlavours.setText("Flavours:");

        lblSelected.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        lblSelected.setText("Selected:");

        liSelected.setModel(modelSelectedList);
        jScrollPane1.setViewportView(liSelected);

        liFlavours.setModel(modelAvailableList);
        jScrollPane2.setViewportView(liFlavours);

        btSaveAndPlaceOrder.setText("Save & Place Order");
        btSaveAndPlaceOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveAndPlaceOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblFlavours)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btDeleteScoop, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btClearAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btSaveAndPlaceOrder)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(btAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblSelected))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(87, Short.MAX_VALUE)
                .addComponent(btAdd)
                .addGap(67, 67, 67)
                .addComponent(btDeleteScoop)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btClearAll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btSaveAndPlaceOrder)
                .addGap(42, 42, 42))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFlavours)
                    .addComponent(lblSelected))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        // Code for single selection below - remember to change selectionMode to SINGLE (in properties)
        /*
        String flavour =  liFlavours.getSelectedValue();
        if (flavour == null)
        {
            JOptionPane.showMessageDialog(this, "No items selected, select flavour", "Internal error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        modelSelectedList.addElement(flavour);
        */
        
        // Code for multiple selection below 
        List<String> selectedList = liFlavours.getSelectedValuesList();
        if (selectedList.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Select flavours to add first.", "Input error", 
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        modelSelectedList.addAll(selectedList);
        
        // to remove the visual of the selection (even though the user still can select more)
        liFlavours.clearSelection(); 
        
    }//GEN-LAST:event_btAddActionPerformed

    private void btDeleteScoopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteScoopActionPerformed
        int[] selectedIndicesArray = liSelected.getSelectedIndices();
        if(selectedIndicesArray.length == 0)
        {
            JOptionPane.showMessageDialog(this, "Select flavours to remove first", "Input error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // delete in reverse order
        for(int i = selectedIndicesArray.length - 1; i >= 0; i--)
        {
            int index = selectedIndicesArray[i];
            modelSelectedList.remove(index);
        }
        
        // Code for single selection below
        /*
        int index = liSelected.getSelectedIndex();  //asking for index of selected item

        if(index == -1)
        {
            JOptionPane.showMessageDialog(this, "Select index to delete first", "Internal error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    
        if(index != -1)
        {
            int dialogAnswer = JOptionPane.showConfirmDialog (null, "Would you like to confirm item to be deleted?",
            "Confirmation needed",JOptionPane.YES_NO_OPTION);

            if(dialogAnswer == JOptionPane.YES_OPTION)
            {
            //add value of string flavour to delault list model
            modelSelectedList.remove(index);
            }
        }
        */
    }//GEN-LAST:event_btDeleteScoopActionPerformed

    private void btClearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btClearAllActionPerformed
        int result = JOptionPane.showConfirmDialog (null, "Would you like to delete all items?",
             "Confirmation needed",JOptionPane.OK_CANCEL_OPTION);
        if(result == JOptionPane.OK_OPTION)
        {
             modelSelectedList.removeAllElements();
        }
    }//GEN-LAST:event_btClearAllActionPerformed

    private void btSaveAndPlaceOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveAndPlaceOrderActionPerformed
        if(modelSelectedList.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "The order is empty. Please add some flavour.", 
                    "Input error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        ArrayList<String> flavList = Collections.list(modelSelectedList.elements());
        String line = String.join(";", flavList);
        // FileWriter's 2nd parameter 'true' means to append instead of overriding 
        try(PrintWriter fileOutput = new PrintWriter(new FileWriter(new File("Purchases.txt")), true))
        {
            fileOutput.println(line);
            JOptionPane.showMessageDialog(this, "Order placed", "Success", JOptionPane.INFORMATION_MESSAGE);
            modelSelectedList.clear();
        }
        catch(IOException ex)
        {   
            JOptionPane.showMessageDialog(this, "Unable to write to file:\n" + ex.getMessage(), 
                    "Error - file access error:", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btSaveAndPlaceOrderActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Day02ScoopSelectorV2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Day02ScoopSelectorV2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Day02ScoopSelectorV2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Day02ScoopSelectorV2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Day02ScoopSelectorV2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btClearAll;
    private javax.swing.JButton btDeleteScoop;
    private javax.swing.JButton btSaveAndPlaceOrder;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblFlavours;
    private javax.swing.JLabel lblSelected;
    private javax.swing.JList<String> liFlavours;
    private javax.swing.JList<String> liSelected;
    // End of variables declaration//GEN-END:variables
}
