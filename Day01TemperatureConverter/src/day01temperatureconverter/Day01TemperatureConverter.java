/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package day01temperatureconverter;

import javax.swing.JOptionPane;

/**
 *
 * @author Acer
 */
public class Day01TemperatureConverter extends javax.swing.JFrame {

    /**
     * Creates new form Day01TemperatureConverter
     */
    public Day01TemperatureConverter() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        lblTemp = new javax.swing.JLabel();
        tfTemp = new javax.swing.JTextField();
        rbFromCelcius = new javax.swing.JRadioButton();
        rbFromFarenheit = new javax.swing.JRadioButton();
        rbToCelcius = new javax.swing.JRadioButton();
        rbToFarenheit = new javax.swing.JRadioButton();
        btConvert = new javax.swing.JButton();
        tfOutput = new javax.swing.JTextField();
        rbFromKelvin = new javax.swing.JRadioButton();
        rbToKelvin = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Temperatura Converter");

        lblTemp.setText("Temp.:");

        buttonGroup1.add(rbFromCelcius);
        rbFromCelcius.setSelected(true);
        rbFromCelcius.setText("Celcius");

        buttonGroup1.add(rbFromFarenheit);
        rbFromFarenheit.setText("Farenheit");

        buttonGroup2.add(rbToCelcius);
        rbToCelcius.setSelected(true);
        rbToCelcius.setText("Celcius");

        buttonGroup2.add(rbToFarenheit);
        rbToFarenheit.setText("Farenheit");

        btConvert.setText("Convert");
        btConvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConvertActionPerformed(evt);
            }
        });

        tfOutput.setEditable(false);

        buttonGroup1.add(rbFromKelvin);
        rbFromKelvin.setText("Kelvin");

        buttonGroup2.add(rbToKelvin);
        rbToKelvin.setText("Kelvin");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(lblTemp))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(rbFromCelcius))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(rbFromFarenheit)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbToKelvin)
                            .addComponent(rbToFarenheit)
                            .addComponent(rbToCelcius))
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbFromKelvin)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btConvert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfOutput))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTemp)
                    .addComponent(tfTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbFromCelcius)
                    .addComponent(rbToCelcius))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbFromFarenheit)
                    .addComponent(rbToFarenheit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbFromKelvin)
                    .addComponent(rbToKelvin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btConvert)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConvertActionPerformed
        String alert = String.format("You should convert two different units");
        
        try
        {
            Double.parseDouble(tfTemp.getText());
        }
        catch (NumberFormatException e)
        {
            JOptionPane.showMessageDialog(this, "Input must be numerical and not empty", "Input error",
                    JOptionPane.ERROR_MESSAGE);
        }
        
        if(rbFromCelcius.isSelected())
        {
            if(rbToCelcius.isSelected())
            {
                JOptionPane.showMessageDialog(this, alert, "Error", JOptionPane.ERROR_MESSAGE);
            }
            else if(rbToFarenheit.isSelected())
            {
                String celsiusStr = tfTemp.getText();
                double celsiusDouble = Double.parseDouble(celsiusStr);
                double farenheitDouble = ((celsiusDouble * 9/5) + 32);
                String result = String.format("%.1f", farenheitDouble);
                tfOutput.setText(result + " °F");
            }
            else if(rbToKelvin.isSelected())
            {
                String celsiusStr = tfTemp.getText();
                double celsiusDouble = Double.parseDouble(celsiusStr);
                double kelvinDouble = (celsiusDouble + 273.15);
                String result = String.format("%.2f", kelvinDouble);
                tfOutput.setText(result + "K");
            }           
        }
        
        else if(rbFromFarenheit.isSelected())
        {
            if(rbToFarenheit.isSelected())
            {
                JOptionPane.showMessageDialog(this, alert, "Error", JOptionPane.ERROR_MESSAGE);
            }
            else if(rbToCelcius.isSelected())
            {
                String farenheitStr = tfTemp.getText();
                double farenheitDouble = Double.parseDouble(farenheitStr);
                double celciusDouble = ((farenheitDouble - 32) * 5/9);
                String result = String.format("%.1f", celciusDouble);
                tfOutput.setText(result + " °C");
            }
            else if(rbToKelvin.isSelected())
            {
                String farenheitStr = tfTemp.getText();
                double farenheitDouble = Double.parseDouble(farenheitStr);
                double kelvinDouble = ((farenheitDouble - 32) * 5/9) + 273.15;
                String result = String.format("%.2f", kelvinDouble);
                tfOutput.setText(result + "K");
            }           
        }
        
        if(rbFromKelvin.isSelected())
        {
            if(rbToKelvin.isSelected())
            {
                JOptionPane.showMessageDialog(this, alert, "Error", JOptionPane.ERROR_MESSAGE);
            }
            else if(rbToCelcius.isSelected())
            {
                String kelvinStr = tfTemp.getText();
                double kelvinDouble = Double.parseDouble(kelvinStr);
                double celciusDouble = (kelvinDouble - 273.15);
                String result = String.format("%.1f", celciusDouble);
                tfOutput.setText(result + " °C");
            }
            else if(rbToFarenheit.isSelected())
            {
                String kelvinStr = tfTemp.getText();
                double kelvinDouble = Double.parseDouble(kelvinStr);
                double farenheitDouble = (kelvinDouble - 273.15) * 9/5 + 32; // (0K − 273.15) × 9/5 + 32 = -459.7°F
                String result = String.format("%.1f", farenheitDouble);
                tfOutput.setText(result + " °F");
            }           
        }
    }//GEN-LAST:event_btConvertActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Day01TemperatureConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Day01TemperatureConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Day01TemperatureConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Day01TemperatureConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Day01TemperatureConverter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btConvert;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel lblTemp;
    private javax.swing.JRadioButton rbFromCelcius;
    private javax.swing.JRadioButton rbFromFarenheit;
    private javax.swing.JRadioButton rbFromKelvin;
    private javax.swing.JRadioButton rbToCelcius;
    private javax.swing.JRadioButton rbToFarenheit;
    private javax.swing.JRadioButton rbToKelvin;
    private javax.swing.JTextField tfOutput;
    private javax.swing.JTextField tfTemp;
    // End of variables declaration//GEN-END:variables
}
