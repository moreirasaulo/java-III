/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practice15.sorting;

import java.text.ParseException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Acer
 */
public class Practice15Sorting extends javax.swing.JFrame {

    DefaultListModel<Dog> modelDogList = new DefaultListModel<>();
    
    public Practice15Sorting() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btAdd = new javax.swing.JButton();
        btUpdate = new javax.swing.JButton();
        tfName = new javax.swing.JTextField();
        sliderAge = new javax.swing.JSlider();
        tfDateOfBirth = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstDog = new javax.swing.JList<>();
        rbSortByName = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        rbSortByAge = new javax.swing.JRadioButton();
        rbSortByDob = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dog Obituary Center");

        jLabel1.setText("Name:");

        jLabel2.setText("Age:");

        jLabel3.setText("Date of birth:");

        btAdd.setText("Add");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        btUpdate.setText("Update");
        btUpdate.setEnabled(false);
        btUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUpdateActionPerformed(evt);
            }
        });

        sliderAge.setMajorTickSpacing(5);
        sliderAge.setMaximum(15);
        sliderAge.setMinorTickSpacing(1);
        sliderAge.setPaintLabels(true);
        sliderAge.setPaintTicks(true);
        sliderAge.setSnapToTicks(true);
        sliderAge.setValue(0);

        lstDog.setModel(modelDogList);
        lstDog.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstDog.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstDogValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstDog);

        buttonGroup1.add(rbSortByName);
        rbSortByName.setSelected(true);
        rbSortByName.setText("Name");
        rbSortByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSortByNameActionPerformed(evt);
            }
        });

        jLabel4.setText("Sort by:");

        buttonGroup1.add(rbSortByAge);
        rbSortByAge.setText("Age");
        rbSortByAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSortByAgeActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbSortByDob);
        rbSortByDob.setText("Date of birth");
        rbSortByDob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSortByDobActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfName))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(sliderAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfDateOfBirth)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(btUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rbSortByName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbSortByAge)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbSortByDob)))
                        .addGap(49, 49, 49))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sliderAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel2)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btUpdate)
                    .addComponent(btAdd))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbSortByName)
                    .addComponent(jLabel4)
                    .addComponent(rbSortByAge)
                    .addComponent(rbSortByDob))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        String name = tfName.getText();
        int age = sliderAge.getValue();
        String strDob = tfDateOfBirth.getText();
        Date dateDob = null;
        try 
        {
            dateDob = Dog.dateFormat.parse(strDob);
        } 
        catch (ParseException ex) 
        {
            JOptionPane.showMessageDialog(this, "Error with the date format", "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Dog dog1;
        try
        {
            dog1 = new Dog(name, age, dateDob);        
        }
        catch(IllegalArgumentException ex)
        {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        modelDogList.addElement(dog1);
    }//GEN-LAST:event_btAddActionPerformed

    private void btUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUpdateActionPerformed
        String name = tfName.getText();
        int age = sliderAge.getValue();
        String strDob = tfDateOfBirth.getText();
        Date dateDob = null;
        try 
        {
            dateDob = Dog.dateFormat.parse(strDob);
        } 
        catch (ParseException ex) 
        {
            JOptionPane.showMessageDialog(this, "Error with the date format", "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Dog dog1;
        try
        {
            dog1 = new Dog(name, age, dateDob);        
        }
        catch(IllegalArgumentException ex)
        {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        modelDogList.setElementAt(dog1, lstDog.getSelectedIndex());
        
        
    }//GEN-LAST:event_btUpdateActionPerformed

    private void lstDogValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstDogValueChanged
        btUpdate.setEnabled(true);
        
        if(modelDogList.isEmpty())
        {
            btUpdate.setEnabled(false);
        }
        
        if(lstDog.getSelectedIndex() == -1)
        {
            btUpdate.setEnabled(false);
        }
    }//GEN-LAST:event_lstDogValueChanged

    private void rbSortByNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSortByNameActionPerformed
        List<Dog> dogs = new ArrayList<>();
        for(int i=0; i < modelDogList.size(); i++)
        {
            dogs.add(modelDogList.get(i));
        }        
        Collections.sort(dogs, Dog.compareByName);
        modelDogList.clear();
        modelDogList.addAll(dogs);        
    }//GEN-LAST:event_rbSortByNameActionPerformed

    private void rbSortByAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSortByAgeActionPerformed
        List<Dog> dogs = new ArrayList<>();
        for(int i=0; i < modelDogList.size(); i++)
        {
            dogs.add(modelDogList.get(i));
        }        
        Collections.sort(dogs, Dog.compareByAge);
        modelDogList.clear();
        modelDogList.addAll(dogs);
    }//GEN-LAST:event_rbSortByAgeActionPerformed

    private void rbSortByDobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSortByDobActionPerformed
        List<Dog> dogs = new ArrayList<>();
        for(int i=0; i < modelDogList.size(); i++)
        {
            dogs.add(modelDogList.get(i));
        }        
        Collections.sort(dogs, Dog.compareByBirthday);
        modelDogList.clear();
        modelDogList.addAll(dogs);
    }//GEN-LAST:event_rbSortByDobActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Practice15Sorting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Practice15Sorting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Practice15Sorting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Practice15Sorting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Practice15Sorting().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<Dog> lstDog;
    private javax.swing.JRadioButton rbSortByAge;
    private javax.swing.JRadioButton rbSortByDob;
    private javax.swing.JRadioButton rbSortByName;
    private javax.swing.JSlider sliderAge;
    private javax.swing.JTextField tfDateOfBirth;
    private javax.swing.JTextField tfName;
    // End of variables declaration//GEN-END:variables
}
