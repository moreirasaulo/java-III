/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practice10.exporttofileimportfromfile;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.ParseException;
import java.util.Scanner;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Acer
 */
public class Practice10ExportToFileImportFromFile extends javax.swing.JFrame 
{

    DefaultListModel<Friend> modelFriendsList = new DefaultListModel<>();
    /**
     * Creates new form Practice10ExportToFileImportFromFile
     */
    public Practice10ExportToFileImportFromFile() 
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstFriends = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        btAddFriend = new javax.swing.JButton();
        btUpdateFriend = new javax.swing.JButton();
        btDeleteFriend = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tfAge = new javax.swing.JTextField();
        jMenuBar2 = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        MenuFileExport = new javax.swing.JMenuItem();
        MenuFileImport = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        MenuFileExit = new javax.swing.JMenuItem();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenuItem3.setText("jMenuItem3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Friends List");

        lstFriends.setModel(modelFriendsList);
        lstFriends.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(lstFriends);

        jLabel1.setText("Enter name:");

        btAddFriend.setBackground(new java.awt.Color(51, 102, 0));
        btAddFriend.setForeground(new java.awt.Color(255, 255, 255));
        btAddFriend.setText("Add friend");
        btAddFriend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddFriendActionPerformed(evt);
            }
        });

        btUpdateFriend.setBackground(new java.awt.Color(255, 255, 0));
        btUpdateFriend.setText("Update selected friend");
        btUpdateFriend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUpdateFriendActionPerformed(evt);
            }
        });

        btDeleteFriend.setBackground(new java.awt.Color(255, 51, 51));
        btDeleteFriend.setForeground(new java.awt.Color(255, 255, 255));
        btDeleteFriend.setText("Delete selected friend");
        btDeleteFriend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteFriendActionPerformed(evt);
            }
        });

        jLabel2.setText("Age:");

        menuFile.setText("File");

        MenuFileExport.setText("Export to file... (*.txt)");
        MenuFileExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuFileExportActionPerformed(evt);
            }
        });
        menuFile.add(MenuFileExport);

        MenuFileImport.setText("Import (add) from file... (*.txt)");
        MenuFileImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuFileImportActionPerformed(evt);
            }
        });
        menuFile.add(MenuFileImport);
        menuFile.add(jSeparator1);

        MenuFileExit.setText("Exit");
        MenuFileExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuFileExitActionPerformed(evt);
            }
        });
        menuFile.add(MenuFileExit);

        jMenuBar2.add(menuFile);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btUpdateFriend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btDeleteFriend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfAge))
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfName)
                            .addComponent(btAddFriend, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAddFriend))
                .addGap(34, 34, 34)
                .addComponent(btUpdateFriend)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btDeleteFriend)
                .addGap(0, 55, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void MenuFileExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuFileExportActionPerformed
        if(modelFriendsList.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Your list is empty.", "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            try(PrintWriter fileOutput = new PrintWriter(new FileWriter(new File("FriendsList.txt"), true)))
            {
                int i;
                for(i = 0; i < modelFriendsList.size(); i++)
                {
                    Friend friend1 = modelFriendsList.getElementAt(i);
                    String str = friend1.name + ";" + friend1.age + ";";
                    fileOutput.println(str);
                }               
            }
            catch(IOException ex)
            {
                        JOptionPane.showMessageDialog(this, "File Not Found", "Error",
                                JOptionPane.ERROR_MESSAGE);
                        
            }
        }        
    }//GEN-LAST:event_MenuFileExportActionPerformed

    private void MenuFileExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuFileExitActionPerformed
        dispose();
    }//GEN-LAST:event_MenuFileExitActionPerformed

    private void btAddFriendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddFriendActionPerformed
        // Name
        String name = tfName.getText();
        if(!name.matches("^[a-zA-Z- ]{3,30}$"))
        {
            JOptionPane.showMessageDialog(this, "The name field should contain only letters and between 3 and 30 characters.", "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Age
        int age = 0;
        try
        {
            age = Integer.parseInt(tfAge.getText());
        }
        catch(NumberFormatException ex)
        {
            JOptionPane.showMessageDialog(this, "Only numbers are accepted for the age field.", "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Creating object and adding element
        Friend friend1 = new Friend(name, age);
        modelFriendsList.addElement(friend1);
    }//GEN-LAST:event_btAddFriendActionPerformed

    private void btUpdateFriendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUpdateFriendActionPerformed
        // If model is empty or if no item was selected
        if(modelFriendsList.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Your friends list is empty", "Error", 
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        else if(lstFriends.getSelectedIndex() == -1)
        {
            JOptionPane.showMessageDialog(this, "Please select an item to update.", "Error", 
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Name
        String name = tfName.getText();
        if(!name.matches("^[a-zA-Z- ]{3,30}$"))
        {
            JOptionPane.showMessageDialog(this, "The name field should contain only letters and between 3 and 30 characters.", "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Age
        int age = 0;
        try
        {
            age = Integer.parseInt(tfAge.getText());
        }
        catch(NumberFormatException ex)
        {
            JOptionPane.showMessageDialog(this, "Only numbers are accepted for the age field.", "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Creating object and updating element
        Friend friend1 = new Friend(name, age);
        modelFriendsList.setElementAt(friend1, lstFriends.getSelectedIndex());
    }//GEN-LAST:event_btUpdateFriendActionPerformed

    private void btDeleteFriendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteFriendActionPerformed
        // Check if it's empty or if it's not selected
        if(modelFriendsList.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Your person list is empty", "Error", 
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        else if(lstFriends.getSelectedIndex() == -1)
        {
            JOptionPane.showMessageDialog(this, "Please select an item to remove.", "Error", 
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        // Delete
        modelFriendsList.removeElementAt(lstFriends.getSelectedIndex());
    }//GEN-LAST:event_btDeleteFriendActionPerformed

    private void MenuFileImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuFileImportActionPerformed
        try(Scanner inputFile = new Scanner(new File("FriendsList.txt")))
        {                                  
            int i;
            while(inputFile.hasNextLine())
            {                
                String str = inputFile.nextLine();          
                String[] friendsList = str.split(";"); 
                try
                {
                    Friend friend1 = new Friend(friendsList[0], Integer.parseInt(friendsList[1]));
                    modelFriendsList.addElement(friend1);
                }
                catch(NumberFormatException ex)
                {
                    JOptionPane.showMessageDialog(this, "Cannot load from file", "Error",
                            JOptionPane.ERROR_MESSAGE);
                }
            }
        } 
        catch(IOException ex)
        {
            JOptionPane.showMessageDialog(this, "File Not Found", "Error",
                    JOptionPane.ERROR_MESSAGE);                        
        }         
    }//GEN-LAST:event_MenuFileImportActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Practice10ExportToFileImportFromFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Practice10ExportToFileImportFromFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Practice10ExportToFileImportFromFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Practice10ExportToFileImportFromFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Practice10ExportToFileImportFromFile().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem MenuFileExit;
    private javax.swing.JMenuItem MenuFileExport;
    private javax.swing.JMenuItem MenuFileImport;
    private javax.swing.JButton btAddFriend;
    private javax.swing.JButton btDeleteFriend;
    private javax.swing.JButton btUpdateFriend;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JList<Friend> lstFriends;
    private javax.swing.JMenu menuFile;
    private javax.swing.JTextField tfAge;
    private javax.swing.JTextField tfName;
    // End of variables declaration//GEN-END:variables
}
